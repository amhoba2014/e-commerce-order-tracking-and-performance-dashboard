// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type OptionsLegacyParser } from '@hey-api/client-fetch';
import type { DefaultHealthCheckError, DefaultHealthCheckResponse, DefaultReadOrdersData, DefaultReadOrdersError, DefaultReadOrdersResponse, DefaultReadProductsData, DefaultReadProductsError, DefaultReadProductsResponse, DefaultReadCustomersData, DefaultReadCustomersError, DefaultReadCustomersResponse, DefaultAddRandomOrderError, DefaultAddRandomOrderResponse, DefaultAddRandomCustomerError, DefaultAddRandomCustomerResponse, DefaultAddRandomProductError, DefaultAddRandomProductResponse, DefaultRestockProductsError, DefaultRestockProductsResponse, DefaultUpdateRandomOrderStatusError, DefaultUpdateRandomOrderStatusResponse, DefaultUpdatePaymentStatusError, DefaultUpdatePaymentStatusResponse } from './types.gen';

export const client = createClient(createConfig());

/**
 * Health Check
 */
export const defaultHealthCheck = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<DefaultHealthCheckResponse, DefaultHealthCheckError, ThrowOnError>({
        ...options,
        url: '/health'
    });
};

/**
 * Read Orders
 */
export const defaultReadOrders = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<DefaultReadOrdersData, ThrowOnError>) => {
    return (options?.client ?? client).get<DefaultReadOrdersResponse, DefaultReadOrdersError, ThrowOnError>({
        ...options,
        url: '/orders'
    });
};

/**
 * Read Products
 */
export const defaultReadProducts = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<DefaultReadProductsData, ThrowOnError>) => {
    return (options?.client ?? client).get<DefaultReadProductsResponse, DefaultReadProductsError, ThrowOnError>({
        ...options,
        url: '/products/'
    });
};

/**
 * Read Customers
 */
export const defaultReadCustomers = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<DefaultReadCustomersData, ThrowOnError>) => {
    return (options?.client ?? client).get<DefaultReadCustomersResponse, DefaultReadCustomersError, ThrowOnError>({
        ...options,
        url: '/customers/'
    });
};

/**
 * Add Random Order
 */
export const defaultAddRandomOrder = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).post<DefaultAddRandomOrderResponse, DefaultAddRandomOrderError, ThrowOnError>({
        ...options,
        url: '/orders/random'
    });
};

/**
 * Add Random Customer
 */
export const defaultAddRandomCustomer = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).post<DefaultAddRandomCustomerResponse, DefaultAddRandomCustomerError, ThrowOnError>({
        ...options,
        url: '/customers/random'
    });
};

/**
 * Add Random Product
 */
export const defaultAddRandomProduct = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).post<DefaultAddRandomProductResponse, DefaultAddRandomProductError, ThrowOnError>({
        ...options,
        url: '/products/random'
    });
};

/**
 * Restock Products
 */
export const defaultRestockProducts = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).post<DefaultRestockProductsResponse, DefaultRestockProductsError, ThrowOnError>({
        ...options,
        url: '/products/restock'
    });
};

/**
 * Update Random Order Status
 */
export const defaultUpdateRandomOrderStatus = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).post<DefaultUpdateRandomOrderStatusResponse, DefaultUpdateRandomOrderStatusError, ThrowOnError>({
        ...options,
        url: '/orders/update_status'
    });
};

/**
 * Update Payment Status
 */
export const defaultUpdatePaymentStatus = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).post<DefaultUpdatePaymentStatusResponse, DefaultUpdatePaymentStatusError, ThrowOnError>({
        ...options,
        url: '/orders/update_payment_status'
    });
};